# -*- coding: utf-8 -*-
"""
100 Days of Code The Complete Python Pro Bootcamp for 2023
Day 14 - Beginner - Higher Lower Game Project

Project: Higher Lower Game
    
Created on Fri Nov 13 16:56:50 2024
"""


# Import random module for choosing Google Searches
import random
# Import dataset for comparisons
from higher_lower_game_data import data
# Import logo from a file with asci art
from higher_lower_art import logo
from higher_lower_art import vs


# Create a function to evaluate player's guesses
def evaluate_guess(guess, first_choice, second_choice):
    option_a = first_choice["follower_count"]
    option_b = second_choice["follower_count"]

    # Reponse if the first choice has the higher user count
    if option_a > option_b:
        if guess == "a":
            print(f"\nCorrect! {first_choice['name']} has {first_choice['follower_count']} million Instagram followers.")
            print(f"{second_choice['name']} only has {second_choice['follower_count']} million Instagram followers.")  

            return True
        else:
            print(f"\nWrong. {second_choice['name']} only has {second_choice['follower_count']} million Instagram followers.")
            print(f"{first_choice['name']} has {first_choice['follower_count']} million Instagram followers.")        

            return False
    # Reponse if the second choice has the higher user count
    else:
        if guess == "b":
            print(f"\nCorrect! {second_choice['name']} has {second_choice['follower_count']} million Instagram followers.")
            print(f"{first_choice['name']} only has {first_choice['follower_count']} million Instagram followers.")            

            return True
        else:
            print(f"\nWrong. {first_choice['name']} only has {first_choice['follower_count']} million Instagram followers.")
            print(f"{second_choice['name']} has {second_choice['follower_count']} million Instagram followers.")  

            return False


def format_choice(choice):
    """Format account into printable format: name, description and country"""
    name = choice["name"]
    description = choice["description"]
    country = choice["country"]
    # print(f'{name}: {account["follower_count"]}')
    return f"{name}, a {description}, from {country}"
    # print(f"Compare A: {data[first]['name']}, a {data[first]['description']}, from {data[first]['country']}")


def new_choices(first_choice, second_choice):
    first_choice = second_choice
    # Ensure that the two integers aren't the same
    while second_choice == first_choice:
        second_choice = random.choice(data)
    return first_choice, second_choice


def prompt_user(first_choice, second_choice):
    # Prompt user for next guess
    guess = input("Who has more followers?  Select A or B: ").lower()
    
    if guess == "a" or guess == "b":    
        return evaluate_guess(guess, first_choice, second_choice)
    else:
        print("Sorry.  I couldn't understand that input.  Try again.")
        prompt_user(first_choice, second_choice)

      
# Create a function with game logic
def higher_lower_game():
    # Instantiate variable for tracking number of correct guesses (Score)
    correct_guesses = 0
    # Instantiate variable to keep game running (while loop)
    game_continues = True
    # Choose a pair of options to be compared at random using random choice
    first, second = random.choice(data), random.choice(data)
    while first == second:
        second = random.choice(data)
        
    # Print logo
    print(logo)
    
    # Print introductory text
    print("Welcome to the Higher Lower Game!")
    print("Each round, you will be presented with two Instagram Accounts.")
    print("You must guess which of the accounts has more followers.\n\n")
   
    # Begin while loop
    while game_continues == True:
        # Change choices for next round
        first = second
        while first == second:
            second = random.choice(data)
        
        # Display choices
        print(f"Compare A: {format_choice(first)}", vs, f"\nAgainst B: {format_choice(second)}\n")
       
        correct_answer = prompt_user(first, second)
        
        # Evaluate guess (function call)
        if correct_answer:             
            # If correct, increment Score up
            correct_guesses += 1
            print(f"You've now made {correct_guesses} correct guesses!\n\n")
        else:
            print(f"Your final score was {correct_guesses} correct guesses.")            
            # If wrong, break loop
            game_continues = False

    # Prompt user whether or not he would like to play again
    if input("Would you like to play again? Y/N ").lower() == "y":
        # If yes, call function
        print("\n")
        higher_lower_game()
    # If no, print farewell message
    else:
        print("Thanks anyway.  Hope to see you again soon.")
        return


if __name__ == "__main__":
    higher_lower_game()

