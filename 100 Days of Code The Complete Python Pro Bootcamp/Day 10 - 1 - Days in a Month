# -*- coding: utf-8 -*-
"""
100 Days of Code The Complete Python Pro Bootcamp for 2023
Day 10 - Beginner - Functions with Outputs

Code Challenge: Days in Month
    
Created on Tue Nov 12 16:56:50 2024
"""

"""
In the starting code, you'll find the solution from the Leap year challenge.  
First, convert this function is_leap() so that instead of printing "Leap Year"
or "Not leap year", it should return True if it is a leap year and return
False if it is not a leap year.

You are then going to create a function called days_in_month() which will 
take a year and a month and inputs.  e.g.

  days_in_month(year=2022, month=2)

And it will use this information to work out the number of days in the month,
then return that as the output. e.g.

  28

The list month_days contains the number of days in a month from January to 
December for a non-leap year.  A leap year has 29 days in February.
"""


def is_leap(year):   
    if year % 4 == 0:
        if year % 100 != 0:
            print(f"Yes, {year} is a leap year!")
        else:
            if year % 400 == 0:
                print(f"Yes, {year} is a leap year!")
            else:
                print(f"No, {year} is not a leap year!")
    else:
        print(f"No, {year} is not a leap year!")


def days_in_month():
    month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]


# Do NOT change any of the code below
year = int(input("Enter a year: "))
month = int(input("Enter a month: "))
days = days_in_month(year, month)
print(days)

