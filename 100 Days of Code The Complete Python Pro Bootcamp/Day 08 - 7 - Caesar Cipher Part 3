# -*- coding: utf-8 -*-
"""
100 Days of Code The Complete Python Pro Bootcamp for 2023
Day 8 - Beginner - Function Parameters & Caesar Cipher

Code Challenge: Caesar Cipher Part 3

Created on Fri Nov  9 13:18:42 2024
"""


alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")
text = input("Type your message:\n").lower()
shift = int(input("Type the shift number:\n"))


#TODO-1: Combine the encrypt() and decrypt() functions into a single function called caesar(). 


def encrypt(plain_text, shift_amount):  
    encrypted_text = ""     # Save space by adding letters to a string rather than a list that needs to be joined later

    for letter in plain_text:
        letter_index = alphabet.index(letter)

        # Mathematical solution.  Alternatively, paste two sets of letters into alphabet list
        if letter_index + shift_amount > 25:
            new_index = (letter_index + shift_amount) - 25
        else:
            new_index = letter_index + shift_amount

        new_letter = alphabet[new_index]
        encrypted_text += new_letter

    print(f"The encoded text is '{encrypted_text}'.")


def decrypt(encrypted_text, shift_amount):
    decrypted_text = ""     # Save space by adding letters to a string rather than a list that needs to be joined later

    for letter in encrypted_text:
        letter_index = alphabet.index(letter)

        # Mathematical solution.  Alternatively, paste two sets of letters into alphabet list
        if letter_index - shift_amount < 0:
            new_index = (letter_index - shift_amount) + 25
        else:
            new_index = letter_index - shift_amount

        new_letter = alphabet[new_index]
        decrypted_text += new_letter

    print(f"The decoded text is '{decrypted_text}'.")


if direction == "encode":
    encrypt(plain_text=text, shift_amount=shift)
elif direction == "decode":
    decrypt(encrypted_text=text, shift_amount=shift)
else:
    print("Sorry.  Try again.  Type 'encode' to encrypt, type 'decode' to decrypt.")


#TODO-2: Call the caesar() function, passing over the 'text', 'shift' and 'direction' values.

